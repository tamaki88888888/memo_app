{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport firebase from 'firebase'; //firebase 設定\n\nvar config = {\n  apiKey: 'APIキー',\n  authDomain: 'プロジェクト.firebaseapp.com',\n  databaseURL: 'https://プロジェクト.firebaseio.com',\n  propjectId: 'プロジェクト.appspot.com',\n  messagingSenderId: 'ID番号'\n}; //Firebase初期化\n\nvar fireapp;\n\ntry {\n  fireapp = firebase.initializeApp(config);\n} catch (error) {\n  console.log(error.message);\n}\n\nexport default fireapp; //ステート初期値\n\nconst initial = {\n  login: false,\n  username: '(click here!)',\n  email: '',\n  data: [],\n  items: []\n}; //レデューサー\n\nfunction fireReducer(state = initial, action) {\n  switch (action.type) {\n    //ダミー\n    case 'UPDATE_USER':\n      return acition.value;\n    //デフォルト\n\n    default:\n      return state;\n  }\n} //initStore関数\n\n\nexport function initStore(state = initial) {\n  return createStore(fireReducer, state, applyMiddleware(thunkMiddleware));\n}","map":{"version":3,"sources":["/Users/koutamakin/development/tamaki/memo_app/store.js"],"names":["createStore","applyMiddleware","thunkMiddleware","firebase","config","apiKey","authDomain","databaseURL","propjectId","messagingSenderId","fireapp","initializeApp","error","console","log","message","initial","login","username","email","data","items","fireReducer","state","action","type","acition","value","initStore"],"mappings":"AAAA,SAASA,WAAT,EAAuBC,eAAvB,QAA8C,OAA9C;AACA,OAAOC,eAAP,MAA4B,aAA5B;AACA,OAAOC,QAAP,MAAqB,UAArB,C,CAEA;;AACA,IAAIC,MAAM,GAAG;AACZC,EAAAA,MAAM,EAAC,OADK;AAEZC,EAAAA,UAAU,EAAE,wBAFA;AAGZC,EAAAA,WAAW,EAAE,+BAHD;AAIZC,EAAAA,UAAU,EAAC,oBAJC;AAKZC,EAAAA,iBAAiB,EAAE;AALP,CAAb,C,CAQA;;AACA,IAAIC,OAAJ;;AACA,IAAI;AACHA,EAAAA,OAAO,GAAGP,QAAQ,CAACQ,aAAT,CAAuBP,MAAvB,CAAV;AACA,CAFD,CAEE,OAAMQ,KAAN,EAAa;AACdC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;AACA;;AACD,eAAeL,OAAf,C,CAEA;;AACA,MAAMM,OAAO,GAAG;AACfC,EAAAA,KAAK,EAAC,KADS;AAEfC,EAAAA,QAAQ,EAAC,eAFM;AAGfC,EAAAA,KAAK,EAAC,EAHS;AAIfC,EAAAA,IAAI,EAAC,EAJU;AAKfC,EAAAA,KAAK,EAAC;AALS,CAAhB,C,CAQA;;AACA,SAASC,WAAT,CAAqBC,KAAK,GAAGP,OAA7B,EAAsCQ,MAAtC,EAA8C;AAC7C,UAAOA,MAAM,CAACC,IAAd;AACC;AACA,SAAK,aAAL;AACC,aAAOC,OAAO,CAACC,KAAf;AACD;;AACA;AACC,aAAOJ,KAAP;AANF;AAQA,C,CAED;;;AACA,OAAO,SAASK,SAAT,CAAmBL,KAAK,GAAGP,OAA3B,EAAmC;AACzC,SAAOhB,WAAW,CAACsB,WAAD,EAAcC,KAAd,EAAqBtB,eAAe,CAACC,eAAD,CAApC,CAAlB;AACA","sourcesContent":["import { createStore , applyMiddleware } from 'redux'\nimport thunkMiddleware from 'redux-thunk'\nimport firebase from 'firebase';\n\n//firebase 設定\nvar config = {\n\tapiKey:'APIキー',\n\tauthDomain: 'プロジェクト.firebaseapp.com',\n\tdatabaseURL: 'https://プロジェクト.firebaseio.com',\n\tpropjectId:'プロジェクト.appspot.com',\n\tmessagingSenderId: 'ID番号'\n};\n\n//Firebase初期化\nvar fireapp;\ntry {\n\tfireapp = firebase.initializeApp(config);\n} catch(error) {\n\tconsole.log(error.message);\n}\nexport default fireapp;\n\n//ステート初期値\nconst initial = {\n\tlogin:false,\n\tusername:'(click here!)',\n\temail:'',\n\tdata:[],\n\titems:[]\n}\n\n//レデューサー\nfunction fireReducer(state = initial, action) {\n\tswitch(action.type){\n\t\t//ダミー\n\t\tcase 'UPDATE_USER':\n\t\t\treturn acition.value;\n\t\t//デフォルト\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\n//initStore関数\nexport function initStore(state = initial){\n\treturn createStore(fireReducer, state, applyMiddleware(thunkMiddleware))\n}\n\n\n"]},"metadata":{},"sourceType":"module"}