{"ast":null,"code":"var _jsxFileName = \"/Users/koutamakin/development/tamaki/memo_app/components/Account.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport firebase from 'firebase';\n\nclass Account extends Component {\n  constructor(props) {\n    super(props); //this.login_check();\n\n    _defineProperty(this, \"style\", {\n      fontSize: '12pt',\n      padding: '5px 10px'\n    });\n\n    this.login_check = this.login_check.bind(this);\n  } //log in処理 \n\n\n  login() {\n    let provider = new firebase.auth.GoogleAuthProvider();\n    var self = this;\n    firebase.auth().signInWithPopup(provider).then(result => {\n      this.props.dispatch({\n        type: 'UPDATE_USER',\n        value: {\n          login: true,\n          username: result.user.displayName,\n          email: result.user.email,\n          data: this.props.data,\n          items: this.props.items\n        }\n      });\n      this.props.onLogined();\n    });\n  } //ログアウト処理\n\n\n  logout() {\n    console.auth().signOut();\n    this.props.dispatch({\n      type: 'UPDATE_USER',\n      value: {\n        login: false,\n        username: '(click here!)',\n        email: '',\n        data: [],\n        items: []\n      }\n    });\n    this.props.onLogouted();\n  } //login,logoutの\n\n\n  login_check() {\n    if (this.props.login == false) {\n      this.login();\n    } else {\n      this.logout();\n    }\n  } //レンダリング\n\n\n  render() {\n    return __jsx(\"p\", {\n      className: \"login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, __jsx(\"span\", {\n      className: \"account\",\n      onClick: this.login_check,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"LOGINED: \", this.props.username));\n  }\n\n}\n\nAccount = connect(state => state)(Account);\nexport default Account;","map":{"version":3,"sources":["/Users/koutamakin/development/tamaki/memo_app/components/Account.js"],"names":["React","Component","connect","firebase","Account","constructor","props","fontSize","padding","login_check","bind","login","provider","auth","GoogleAuthProvider","self","signInWithPopup","then","result","dispatch","type","value","username","user","displayName","email","data","items","onLogined","logout","console","signOut","onLogouted","render","state"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,UAArB;;AAEA,MAAMC,OAAN,SAAsBH,SAAtB,CAAgC;AAM/BI,EAAAA,WAAW,CAACC,KAAD,EAAO;AACjB,UAAMA,KAAN,EADiB,CAEjB;;AAFiB,mCALV;AACPC,MAAAA,QAAQ,EAAC,MADF;AAEPC,MAAAA,OAAO,EAAC;AAFD,KAKU;;AAGjB,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACA,GAV8B,CAY/B;;;AACAC,EAAAA,KAAK,GAAE;AACN,QAAIC,QAAQ,GAAG,IAAIT,QAAQ,CAACU,IAAT,CAAcC,kBAAlB,EAAf;AACA,QAAIC,IAAI,GAAG,IAAX;AACAZ,IAAAA,QAAQ,CAACU,IAAT,GAAgBG,eAAhB,CAAgCJ,QAAhC,EACEK,IADF,CACQC,MAAD,IAAU;AAChB,WAAKZ,KAAL,CAAWa,QAAX,CAAoB;AACnBC,QAAAA,IAAI,EAAC,aADc;AAEnBC,QAAAA,KAAK,EAAC;AACLV,UAAAA,KAAK,EAAC,IADD;AAELW,UAAAA,QAAQ,EAAEJ,MAAM,CAACK,IAAP,CAAYC,WAFjB;AAGLC,UAAAA,KAAK,EAAEP,MAAM,CAACK,IAAP,CAAYE,KAHd;AAILC,UAAAA,IAAI,EAAC,KAAKpB,KAAL,CAAWoB,IAJX;AAKLC,UAAAA,KAAK,EAAC,KAAKrB,KAAL,CAAWqB;AALZ;AAFa,OAApB;AAUA,WAAKrB,KAAL,CAAWsB,SAAX;AACA,KAbD;AAcA,GA9B8B,CAgC/B;;;AACAC,EAAAA,MAAM,GAAE;AACPC,IAAAA,OAAO,CAACjB,IAAR,GAAekB,OAAf;AACA,SAAKzB,KAAL,CAAWa,QAAX,CAAoB;AACnBC,MAAAA,IAAI,EAAC,aADc;AAEnBC,MAAAA,KAAK,EAAC;AACLV,QAAAA,KAAK,EAAC,KADD;AAELW,QAAAA,QAAQ,EAAC,eAFJ;AAGLG,QAAAA,KAAK,EAAC,EAHD;AAILC,QAAAA,IAAI,EAAC,EAJA;AAKLC,QAAAA,KAAK,EAAC;AALD;AAFa,KAApB;AAUA,SAAKrB,KAAL,CAAW0B,UAAX;AACA,GA9C8B,CAgD/B;;;AACAvB,EAAAA,WAAW,GAAE;AACZ,QAAI,KAAKH,KAAL,CAAWK,KAAX,IAAoB,KAAxB,EAA+B;AAC9B,WAAKA,KAAL;AACA,KAFD,MAEO;AACN,WAAKkB,MAAL;AACA;AACD,GAvD8B,CAyD/B;;;AACAI,EAAAA,MAAM,GAAE;AACP,WACC;AAAG,MAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAM,MAAA,SAAS,EAAC,SAAhB;AAA0B,MAAA,OAAO,EAAE,KAAKxB,WAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACY,KAAKH,KAAL,CAAWgB,QADvB,CADD,CADD;AAOA;;AAlE8B;;AAqEhClB,OAAO,GAAGF,OAAO,CAAEgC,KAAD,IAASA,KAAV,CAAP,CAAwB9B,OAAxB,CAAV;AACA,eAAeA,OAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport firebase from 'firebase';\n\nclass Account extends Component {\n\tstyle = {\n\t\tfontSize:'12pt',\n\t\tpadding:'5px 10px'\n\t}\n\n\tconstructor(props){\n\t\tsuper(props);\n\t\t//this.login_check();\n\t\tthis.login_check = this.login_check.bind(this);\n\t}\n\n\t//log in処理 \n\tlogin(){\n\t\tlet provider = new firebase.auth.GoogleAuthProvider();\n\t\tvar self = this;\n\t\tfirebase.auth().signInWithPopup(provider)\n\t\t\t.then((result)=>{\n\t\t\tthis.props.dispatch({\n\t\t\t\ttype:'UPDATE_USER',\n\t\t\t\tvalue:{\n\t\t\t\t\tlogin:true,\n\t\t\t\t\tusername: result.user.displayName,\n\t\t\t\t\temail: result.user.email,\n\t\t\t\t\tdata:this.props.data,\n\t\t\t\t\titems:this.props.items\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis.props.onLogined();\n\t\t})\n\t}\n\n\t//ログアウト処理\n\tlogout(){\n\t\tconsole.auth().signOut();\n\t\tthis.props.dispatch({\n\t\t\ttype:'UPDATE_USER',\n\t\t\tvalue:{\n\t\t\t\tlogin:false,\n\t\t\t\tusername:'(click here!)',\n\t\t\t\temail:'',\n\t\t\t\tdata:[],\n\t\t\t\titems:[]\n\t\t\t}\n\t\t});\n\t\tthis.props.onLogouted();\n\t}\n\n\t//login,logoutの\n\tlogin_check(){\n\t\tif (this.props.login == false) {\n\t\t\tthis.login();\n\t\t} else {\n\t\t\tthis.logout();\n\t\t}\n\t}\n\n\t//レンダリング\n\trender(){\n\t\treturn (\n\t\t\t<p className=\"login\">\n\t\t\t\t<span className=\"account\" onClick={this.login_check}>\n\t\t\t\t\t LOGINED: {this.props.username}\n\t\t\t\t</span>\n\t\t\t</p>\n\t\t)\n\t}\n}\n\nAccount = connect((state)=>state)(Account);\nexport default Account;\n"]},"metadata":{},"sourceType":"module"}