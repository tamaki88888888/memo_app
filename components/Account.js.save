AOOOOOOOOOOOOOOOOimport React, { ComOOOOOOOOOOAOOOOOOOOOAOOOOOOOponent } from 'reacOOOOBt { connect } from 'react-redux';
import OOOBfirebase from 'firebase';
OBOOOO
clOasOBBOOOBOOOBOBs Account exteOnds Component {
OO	stOOAOABOBOOAyle = {
	AO	OO
fontSize:'12pt',
	O	paBdding:'5px 10px'
	}

	constructor(props){
		supOer(props);
	O	//thOOis.login_check();
	O	this.lBOogin_check = this.login_check.bind(this);
	}BO
OOO
	//log in処理 
O	logOOin(){
OOOOOOOOOOO		let provider = new firebase.auth.GoogleAuthProvider();
		var self = this;
		firebase.auth().signInWithPopup(provider)
			.then((result)=>{
			this.props.dispatch({
				type:'UPDATE_USER',
				value:{
				login:true,
				username: result.user.displayName,
				email: result.user.email,
				data:this.props.data,
				items:this.props.items
			}
		});
		this.props.onLogined();
	}

	//ログアウト処理
	logout(){
		console.auth().signOut();
		this.props.dispatch({
			type:'UPDATE_USER',
			value:{
				login:false,
				username:'(click here!)',
				email:'',
				data:[],
				items:[]
			}
		});
		this.props.onLogouted();
	}

	//login,logoutの
	login_check(){
		if (this.props.login == false) {
			this.login();
		} else {
			this.logout();
		}
	}

	//レンダリング
	render(){
		return (
			<p className="login">
				<span className="account" onClick={this.login_check}>
					 LOGINED: {this.props.username}
				</span>
			</p>
		)
	}
}

Account = connect((state)=>state)(Account);
export default Account;
