OBOBimOOOOAOAOAOAAOOAOOOOOOOOAOOOOOOAOAOOBBOOOport react, { Component } from 'react';
impoOBrt { connect } from 'react-redux';
import Router from 'next/router';OOOOOOOOOOO
import firebase from 'firebase';OOB
import Lib from '../static/address_OBOOBOOOO:lib';
importO Account from '../components/Account';

claOOOss AddressAdd extends Component {
OBO	style = {
BOA		fontSize:'12pt',
O		padding:'5px 10px'
	}

O	constructor(props){
		super(props);
		if(this.props.login == false){
O			Router.push('/address');
O		}
		this.state = {
			name:'',
OAOOA			email:'',
			tel:'',
O			memo:'',
			message:'データを入力してください'
		}
OO		this.logined = this.logined.bind(this);
OOBO		this.onChangeName = this.onChangeName.bind(this);
O		this.onChangeEmail = this.onChangeTel.bind(this);
		this.OnChangeMemo = this.doAction.bind(this);
O	}
	
BOAOO	//login,logout 処理
O	logined(){
O		console.log('logined');
OBO	}
	logouted(){
OOOOOOB		console.log('logouted');
OO	}

	//フィールド入力処理
	onChangeName(e){
		this.setState({name:e.target.value});
	}
	onChangeEmail(e){
		this.setState({email:e.target.value});
	}
	onChangeTel(){
		this.setState({tel:e.target.value});
	}
	onChangeMemo(){
		this.setState({memo:e.target.value});
	}

	//データの登録処理
	doAction(e){
		let key = this.state.email;
		let data = {
			name:this.state.name,
			tel:this.state.tel,
			memo:this.state.memo
		}
		let db = firebase.database();
		let ref = db.ref('address/'
			+ Lib.encodeEmail(this.props.email) + "/"
			+ Lib.encodeEmail(this.state.email));
		console.log(ref);
		ref.set(data);
		this.setState({
			name:'',
			email:'',
			tel:'',
			memo:'',
			message:'登録しました'
		})
	}

	//レンダリング
	render(){
		return (
			<div>
				<Account self={this} onLogined={this.logined} onLogouted={this.logouted} />
			<hr />
			<p>{this.state.message}</p>
			{this.props.login
			?
			<table>
				<tbody>
					<tr>
						<th>name:</th>
						<td><input type='text' size='30' value={this.props.name} onChange={this.onChangeName}/></td>
					</tr>
					<tr>
						<th>email:</th>
						<td><input type='text' size='30' value={this.state.email} onChange={this.onChangeEmail}/></td>
					</tr>
					<tr>
						<th>tel:</th>
						<td><input type='text' size='30' value={this.state.tel} onChange={this.onChangeTel}/></td>
					</tr>
					<tr>
						<th>memo:</th>
						<td><input type='text' size='30' value={this.state.memo} onChange={this.onChangeMemo}/></td>
					</tr>
					<tr>
						<th></th>
						<td><button onClick={this.doAction}>Add</button></td>
					</tr>
				</tbody>
			</table>
			:				
			<p>please login...</p>
			}
		</div>
		);
	}
}

AddressAdd = connect((state)=> state) (AddressAdd);
export default AddressAdd;					
							
